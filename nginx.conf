# In conf.d/nginx_template.conf

# gzip on;
# gzip_disable "msie6";

# gzip_static on;
# gzip_vary on;
# gzip_proxied any;
# gzip_comp_level 6;
# gzip_buffers 16 8k;
# gzip_http_version 1.1;
# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
# the upstream component nginx needs to connect to
upstream backend {
    server backend:5000; # for a web port socket (we'll use this first)
}

server {
    listen 80;

    # max upload size
    client_max_body_size 75M; # adjust to taste

    if ($host != "localhost") {
        return 301 http://localhost$request_uri;
    }

    location /admin {
        root /app/wwwroot/;
        expires 365d;

        open_file_cache max=1500 inactive=300s;
        open_file_cache_valid 12h;
        open_file_cache_min_uses 1;
    }

    location / {
        root /app/wwwroot/;
        try_files $uri @backend;
        expires 365d;

        open_file_cache max=1500 inactive=300s;
        open_file_cache_valid 12h;
        open_file_cache_min_uses 1;

    }

    location @backend {
        proxy_pass http://backend;
        proxy_set_header Upgrade $http_upgrade;
        #proxy_set_header   Connection keep-alive;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Real-IP $remote_addr;


        #    proxy_set_header        Host            $host;
        #    proxy_set_header        X-Real-IP       $remote_addr;
        #    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        #    proxy_set_header    X-Forwarded-Protocol $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        #          proxy_set_header Connection "upgrade";
        client_max_body_size 50M;
    }
}